#! /bin/bash

DEFAULT_CONFIG=/etc/upcheck.conf

config="$DEFAULT_CONFIG"
if [ $# -gt 0 ]
then
    config="$1"
fi

if [ ! -r "$config" ]
then
    cat 1>&2 <<ERRMSG
Configuration file $config doesn't exist or isn't readable.
ERRMSG
    exit 1
fi

source "$config"

host_up ()
{
    host="$1"
    ping -c 1 "$host" >/dev/null 2>&1
}

ssh_up ()
{
    host="$1"
    nc -w 2 -z "$host" 22 >/dev/null
}

figlet -c "Upcheck"
printf "Beginning checks at %s.\n" "`date "+%Y-%m-%d %H:%M:%S"`"
start=`date +%s`

for host_alias in $hosts
do
    host_variable="$host_alias"_host
    user_variable="$host_alias"_user
    services_variable="$host_alias"_services
    host="${!host_variable}"
    user="${!user_variable}"
    services="${!services_variable}"

    if [ -z "$host" ]
    then
        host="$host_alias"
    fi

    if [ -n "$user" ]
    then
        ssh_connect="$user"@"$host"
    else
        ssh_connect="$host"
    fi

    echo
    echo -e "\033[1m$host_alias:\033[0m"

    if host_up "$host"
    then
        echo -e "Host is \033[32mup\033[0m."
    else
        echo -e "Host is \033[31mdown\033[0m. Skipping further tests."
        continue
    fi

    if ssh_up "$host"
    then
        echo -e "SSH is \033[32mup\033[0m."
    else
        echo -e "SSH is \033[31mdown\033[0m. Skipping further tests."
        continue
    fi

    for service in $services
    do
        path_variable="$host_alias"_"$service"
        name_variable="$host_alias"_"$service"_name
        path="${!path_variable}"
        name="${!name_variable}"

        # If a pretty name hasn't been given, use the service name.
        if [ -z "$name" ]
        then
            name="$service"
        fi

        # If a path hasn't been given, match against the service name.
        if [ -z "$path" ]
        then
            path="$service"
        fi

        ssh "$ssh_connect" "pgrep -f $path" >/dev/null 2>&1
        success=$?
        case $success in
        0)
            echo -e "$name is \033[32mrunning\033[0m." ;;
        1)
            echo -e "$name is \033[31mnot running\033[0m." ;;
        255)
            echo -e "$name is \033[33minaccessible\033[0m" \
                    "(SSH connection failure)." ;;
        *)
            echo -e "$name is \033[34muncheckable\033[0m" \
                    "(unknown exit code: $success)." ;;
        esac
    done
done

end=`date +%s`
duration=`expr $end - $start`
printf "\nFinished at %s (%ss).\n" "`date "+%Y-%m-%d %H:%M:%S"`" $duration
